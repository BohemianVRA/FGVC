name: Build and Create Release

on:
  push:
    tags:
    - 'v*'

env:
  PYTHON_VERSION: 3.8

jobs:
  build:
    name: Build Package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install Dependencies
        run: |
          pip install -U pip
          pip install -U setuptools build
      - name: Build Python Package
        run: python -m build
#      - name: Test Importing Python Package
#        run: |
#          pip install $(ls -1 dist/*.tar.gz | tail -1)
#          python -c "import fgvc; print(fgvc.__version__)"
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/
  pypi-upload:
    name: Upload to PyPI Server
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
      - name: List Files
        run: ls -R
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install Dependencies
        run: |
          pip install -U pip
          pip install -U twine
      - name: Run Twine Upload
        run: |
          twine upload \
            --repository-url ${{ secrets.PYPI_SERVER_URL }} \
            --username ${{ secrets.PYPI_USERNAME }} \
            --password ${{ secrets.PYPI_PASSWORD }} \
          $(ls -1 dist/*.tar.gz | tail -1)
  changelog:
    name: Generate Changelog
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Generate Release Changelog
        uses: heinrichreimer/github-changelog-generator-action@v2.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          onlyLastTag: true
          headerLabel: "# üìë Changelog"
          breakingLabel: '### üí• Breaking'
          enhancementLabel: '### üöÄ Enhancements'
          bugsLabel: '### üêõ Bug fixes'
          deprecatedLabel: '### ‚ö†Ô∏è Deprecations'
          removedLabel: '### üî• Removals'
          securityLabel: '### üõ°Ô∏è Security'
          issuesLabel: '### üìÅ Other issues'
          prLabel: '### üìÅ Other pull requests'
          addSections: '{"documentation":{"prefix":"### üìñ Documentation","labels":["documentation"]},"tests":{"prefix":"### ‚úÖ Testing","labels":["tests"]}}'
          issues: true
          issuesWoLabels: true
          pullRequests: true
          prWoLabels: true
          author: true
          unreleased: true
          compareLink: true
          stripGeneratorNotice: true
          verbose: true
      - name: Print Changelog
        run: cat CHANGELOG.md
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: changelog
          path: CHANGELOG.md
  release:
    name: Create Release
    needs: [build, changelog]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
      - name: List Files
        run: ls -R
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          files: |
            changelog/CHANGELOG.md
            dist/*.tar.gz
            dist/*.whl
          body_path: changelog/CHANGELOG.md
          generate_release_notes: true
          draft: false
